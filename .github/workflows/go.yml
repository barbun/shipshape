name: Go

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'

jobs:

  test-build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Vet
      run: go vet ./...

    - name: Run generators
      run: go generate ./...

    - name: Build
      run: go build -ldflags="-s -w" -o build/shipshape . && ls -lh build/shipshape

    - name: List check types
      run: ./build/shipshape --list-checks

    - name: Test
      run: go test -v -race ./... -coverprofile=build/coverage.out

    - uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: build/coverage.out

    - name: Upload test coverage
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build
      if: github.ref_name == 'main'

  nightly-release:
    needs: test-build
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --snapshot --rm-dist

    - name: Rename binaries & cleanup dist
      run: |
        mv dist/shipshape_darwin_amd64_v1/shipshape dist/shipshape-Darwin-x86_64
        mv dist/shipshape_darwin_arm64/shipshape dist/shipshape-Darwin-aarch64
        mv dist/shipshape_linux_amd64_v1/shipshape dist/shipshape-Linux-x86_64
        mv dist/shipshape_linux_arm64/shipshape dist/shipshape-Linux-aarch64
        rmdir dist/shipshape_darwin_amd64_v1
        rmdir dist/shipshape_darwin_arm64
        rmdir dist/shipshape_linux_amd64_v1
        rmdir dist/shipshape_linux_arm64
        rm dist/artifacts.json dist/config.yaml dist/metadata.json dist/shipshape.rb

    - name: Update nightly release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        files: dist/*
        automatic_release_tag: nightly
        title: Nightly
        rm: true

  publish-binary:
    needs: test-build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Fetch all tags
      run: git fetch --force --tags
      if: startsWith(github.ref_name, 'v')

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
      if: startsWith(github.ref_name, 'v')

  publish-docker:
    needs: test-build
    uses: ./.github/workflows/docker-publish.yml
